import fs from 'fs';
import path from 'path';
import sequelize from 'db/connection';
import * as util from 'db/util';
import { validate, validateToUpdate } from 'db/util/validate';

const basename = path.basename(module.filename);
const models = {};

fs.readdirSync(__dirname)
  .filter(file => file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js')
  .forEach((file) => {
    const model = sequelize.import(path.join(__dirname, file));
    // extend models
    model.fullUpdate = (id, values) => util.fullUpdate(model, id, values);
    model.fullCreate = values => util.fullCreate(model, values);
    model.validate = values => validate(model, values);
    model.validateToUpdate = values => validateToUpdate(model, values);
    model.verifyPk = id => util.verifyPk(model, id);
    model.autoGeneratedFields = () => util.autoGeneratedFields(model);
    model.unupdateFields = () => util.unupdateFields(model);
    models[model.name] = model;
  });

Object.keys(models).forEach((modelName) => {
  if (models[modelName].associate) models[modelName].associate(models);
});

export default models;
